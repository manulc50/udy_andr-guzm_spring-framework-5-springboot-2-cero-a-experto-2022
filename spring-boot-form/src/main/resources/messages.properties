# Mensaje de error personalizado asociado a la anotación @NotEmpty a nivel global
NotEmpty=el campo es requerido
# Mensaje de error personalizado asociado a la anotación @NotEmpty para el campo "nombre" del atributo "user"
NotEmpty.user.nombre=el campo nombre es obligatorio
# Mensaje de error personalizado asociado a la anotación @NotEmpty para el campo "username" del atributo "user"
NotEmpty.user.username=el campo username es obligatorio
# Mensaje de error personalizado asociado a la anotación @Email para el campo "email" del atributo "user"
Email.user.email=el formato del correo no es válido
# Mensaje de error personalizado para usarlo en nuestro validador personalizado "UsuarioValidator"
pattern.usuario.identificador=formato de la expresión regular incorrecto
# Mensaje de error personalizado para usarlo en nuestro validador personalizado "UsuarioValidator"
requerido.usuario.nombre=el campo nombre es requerido
# Mensaje de error personalizado asociado a nuestra anotación personalizada @IdentificadorRegex para el campo "idEmpleado" del atributo "user"
IdentificadorRegex.user.idEmpleado=formato de la expresión regular inválido, con anotaciones
# Mensaje de error personalizado asociado a nuestra anotación personalizada @Requerido para el campo "apellido" del atributo "user"
Requerido.user.apellido=El campo apellido es requerido, con anotaciones
# Mensaje de error personalizado global cuando el tipo de dato introducido no se corresponde con un número entero
# El mensaje de error por defecto es del tipo "Failed to convert property value of type java.lang.String to required type java.lang.Integer for property cuenta; nested exception is java.lang.NumberFormatException"
# Por ejemplo, si se tiene un input de tipo "text" asociado a un campo de tipo Integer y el usuario introduce un valor que no se corresponde con un número entero, se produce el error
typeMismatch.java.lang.Integer=Debe ser un número entero
# Mensaje de error personalizado para el campo "cuenta" del atributo "user" cuando el tipo de dato del valor introducido no se corresponde con el tipo de dato de ese campo 
typeMismatch.user.cuenta=El campo cuenta debe ser un número entero
# Mensaje de error personalizado global cuando el tipo de dato introducido no se corresponde con una fecha o cuando se introduce una fecha en otro formato al esperado
# El mensaje de error por defecto es del tipo "Failed to convert property value of type java.lang.String to required type java.util.Date for property fechaNacimiento; nested exception is org.springframework.core.convert.ConversionFailedException"
# Por ejemplo, si se tiene un input de tipo "text" asociado a un campo de tipo Date y el usuario introduce un valor que no se corresponde con una fecha, se produce el error
typeMismatch.java.util.Date=Debe ser una fecha con formato "yyyy-MM-dd"
# Mensaje de error personalizado para el campo "fechaNacimiento" del atributo "user" cuando el tipo de dato del valor introducido no se corresponde con el tipo de dato de ese campo 
typeMismatch.user.fechaNacimiento=El campo fecha de nacimiento debe ser una fecha con formato "yyyy-MM-dd"
# Mensaje de error personalizado asociado a la anotación @Future para el campo "fechaNacimiento" del atributo "user"
Past.user.fechaNacimiento=El campo fecha de nacimiento debe ser una fecha anterior a la actual